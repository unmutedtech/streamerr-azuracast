name: Build and Deploy
on:
  pull_request:
    branches:
      - main
  push:
    paths-ignore:
      - '*.md'
      - '.github/*.yml'
      - '.github/ISSUE_TEMPLATE/*.md'
    branches:
      - main
      - stable
      - 'dev-*'

concurrency: 
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    name: Test Suite
    runs-on: ubuntu-latest
    env:
      APPLICATION_ENV: testing
      NODE_ENV: production
    steps:
      - uses: actions/checkout@master

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'
          extensions: intl, xdebug
          tools: composer:v2, cs2pr

      - name: Cache PHP dependencies
        uses: actions/cache@v4
        with:
          path: vendor
          key: ${{ runner.OS }}-build-${{ hashFiles('composer.lock') }}

      - name: Run Composer install
        run: |
          composer install --no-interaction --ignore-platform-reqs

      - name: Run PHP Linter
        run: |
          vendor/bin/parallel-lint . --exclude vendor --checkstyle | cs2pr

      - name: Run PHPStan
        run: |
          vendor/bin/phpstan analyze --memory-limit=-1 --error-format=checkstyle | cs2pr

      - name: Run PHP Code Sniffer
        run: |
          vendor/bin/phpcs --report=checkstyle | cs2pr

  build:
    name: Build & Deploy
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    steps:
      - uses: actions/checkout@master

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DigitalOcean Container Registry
        uses: docker/login-action@v3
        with:
          registry: registry.digitalocean.com
          username: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
          password: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            registry.digitalocean.com/streamerr/azuracast:latest
            registry.digitalocean.com/streamerr/azuracast:${{ github.sha }}
